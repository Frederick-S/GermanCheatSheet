{
  "name": "lunr",
  "description": "Simple full-text search in your browser.",
  "version": "0.5.2",
  "author": {
    "name": "Oliver Nightingale"
  },
  "keywords": [
    "search"
  ],
  "homepage": "http://lunrjs.com",
  "bugs": {
    "url": "http://github.com/olivernn/lunr.js/issues"
  },
  "main": "lunr.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/olivernn/lunr.js.git"
  },
  "devDependencies": {
    "phantomjs": "1.8.1-3"
  },
  "scripts": {
    "test": "phantomjs test/env/runner.js http://localhost:3000/test",
    "start": "node server.js"
  },
  "readme": "# Lunr.js\n\n[![Build Status](https://travis-ci.org/olivernn/lunr.js.png?branch=master)](https://travis-ci.org/olivernn/lunr.js)\n\nA bit like Solr, but much smaller and not as bright.\n\n## Example\n\nA very simple search index can be created using the following:\n\n```javascript\nvar idx = lunr(function () {\n    this.field('title', { boost: 10 })\n    this.field('body')\n})\n```\n\nAdding documents to be indexed is as simple as:\n\n```javascript\nvar doc = {\n    \"title\": \"Twelfth-Night\",\n    \"body\": \"If music be the food of love, play on: Give me excess of itâ€¦\",\n    \"author\": \"William Shakespeare\",\n    \"id\": 1\n}    \nidx.add(doc)\n```\n\nThen searching is as simple:\n\n```javascript\nidx.search(\"love\")\n```\n\nThis returns a list of matching documents with a score of how closely they match the search query:\n\n```javascript\n[{\n    \"ref\": 1,\n    \"score\": 0.87533\n}]\n```\n\n[API documentation](http://lunrjs.com/docs) is available, as well as a full working example.\n\n## Description\n\nLunr.js is a small, full-text search library for use in the browser.  It indexes JSON documents and provides a simple search interface for retrieving documents that best match text queries.\n\n## Why\n\nFor web applications with all their data already sitting in the client, it makes sense to be able to search that data on the client too.  It saves adding extra, compacted services on the server.  A local search index will be quicker, there is no network overhead, and will remain available and useable even without a network connection.\n\n## Installation\n\nSimply include the lunr.js source file in the page that you want to use it.  Lunr.js is supported in all modern browsers.\n\nBrowsers that do not support ES5 will require a JavaScript shim for Lunr to work. You can either use [Augment.js](http://augmentjs.com), [ES5-Shim](https://github.com/kriskowal/es5-shim) or any library that patches old browsers to provide an ES5 compatible JavaScript environment.\n\n## Contributing\n\nContributions are very welcome, to make the process as easy as possible please follow these steps:\n\n* Open an issue detailing the bug you've found, or the feature you wish to add.  Simplified working examples using something like [jsFiddle](http://jsfiddle.net) make it easier to diagnose your problem.\n* Add tests for your code (so I don't accidentally break it in the future)\n* Don't change version numbers or make new builds as part of your changes\n\n### Developer Dependencies\n\nA JavaScript runtime is required for building the library.\n\nRun the tests with, this will use phantomjs to run the tests:\n\n    make test\n\nThe tests can also be run in the browser by starting the test server:\n\n    make test_server\n\nThis will start a server on port 3000, the tests are then available at '/test'\n\n",
  "readmeFilename": "README.mdown",
  "_id": "lunr@0.5.2",
  "_from": "lunr@0.5.2"
}
