{
  "name": "gitbook",
  "version": "0.3.0",
  "homepage": "http://www.gitbook.io/",
  "description": "Library and cmd utility to generate GitBooks",
  "main": "lib/index.js",
  "dependencies": {
    "q": "1.0.1",
    "lodash": "2.4.1",
    "marked": "0.3.2",
    "marked-text-renderer": "0.0.1",
    "lunr": "0.5.2",
    "swig": "1.3.2",
    "send": "0.2.0",
    "fstream-ignore": "0.0.7",
    "commander": "2.2.0",
    "fs-extra": "0.8.1",
    "highlight.js": "8.0.0",
    "tmp": "0.0.23",
    "semver": "2.2.1",
    "gitbook-plugin": "0.0.2",
    "gitbook-plugin-mixpanel": "0.0.2",
    "gitbook-plugin-mathjax": "0.0.3"
  },
  "devDependencies": {
    "mocha": "1.18.2",
    "grunt": "~0.4.2",
    "grunt-cli": "0.1.11",
    "grunt-contrib-less": "~0.5.0",
    "grunt-contrib-requirejs": "0.4.1"
  },
  "scripts": {
    "test": "export TESTING=true; mocha --reporter list"
  },
  "bin": {
    "gitbook": "./bin/gitbook.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/GitbookIO/gitbook.git"
  },
  "keywords": [
    "git",
    "book",
    "gitbook"
  ],
  "author": {
    "name": "FriendCode",
    "email": "contact@friendco.de"
  },
  "license": "Apache 2",
  "bugs": {
    "url": "https://github.com/GitbookIO/gitbook/issues"
  },
  "contributors": [
    {
      "name": "Aaron O'Mullan",
      "email": "aaron.omullan@gmail.com"
    },
    {
      "name": "Samy Pessé",
      "email": "samypesse@gmail.com"
    }
  ],
  "readme": "GitBook\n=======\n\n[![Build Status](https://travis-ci.org/GitbookIO/gitbook.png?branch=master)](https://travis-ci.org/GitbookIO/gitbook)\n\nGitBook is a command line tool (and Node.js library) for building beautiful programming books and exercises using GitHub/Git and Markdown. You can see an example: [Learn Javascript](http://gitbookio.github.io/javascript/). An [editor](https://github.com/GitbookIO/editor) is available for Windows, Mac and Linux. You can follow [@GitBookIO](https://twitter.com/GitBookIO) on Twitter.\n\n![Image](https://raw.github.com/GitbookIO/gitbook/master/preview.png)\n\n## How to use it:\n\nGitBook can be installed from **NPM** using:\n\n```\n$ npm install gitbook -g\n```\n\nYou can serve a repository as a book using:\n\n```\n$ gitbook serve ./repository\n```\n\nOr simply build the static website using:\n\n```\n$ gitbook build ./repository --output=./outputFolder\n```\n\nOptions for commands `build` and `serve` are:\n\n```\n-t, --title <name> Name of the book to generate, defaults to repo name\n-i, --intro <intro> Description of the book to generate\n-g, --github <repo_path> ID of github repo like : username/repo\n-o, --output <directory>  Path to output directory, defaults to ./_book\n-f, --format <name>       Change generation format, defaults to site, availables are: site, page, pdf, json\n--githubHost <url>   The url of the github host (defaults to https://github.com/)\n--plugins <plugins>  List of plugins to use separated by \",\"\n--pluginsConfig <json file> JSON File containing plugins configuration\n```\n\nYou can publish your books to our index by visiting [GitBook.io](http://www.gitbook.io)\n\n## Output Formats\n\nGitBook can generate your book in the following formats:\n\n* **Static Website**: This is the default format, it generates a complete interactive static website that can be for example hosted on GitHub Pages.\n* **PDF**: A complete PDF book with exercise solutions at the end of the book. Generate to this format using: ```gitbook pdf ./myrepo```, you need to have [gitbook-pdf](https://github.com/GitbookIO/gitbook-pdf) installed.\n* **eBook**: A complete eBook with exercise solutions at the end of the book. Generate to this format using: ```gitbook ebook ./myrepo```, you need to have [ebook-convert](http://manual.calibre-ebook.com/cli/ebook-convert.html) installed.\n* **Single Page**: The book will be stored in a single printable HTML page, this format is used for conversion to PDF or eBook. Generate to this format using: ```gitbook build ./myrepo -f page```.\n* **JSON**: This format is used for debugging or extracting metadata from a book. Generate to this format using: ```gitbook build ./myrepo -f json```.\n\n## Book Format\n\nA book is a GitHub repository containing at least 2 files: `README.md` and `SUMMARY.md`.\n\n#### README.md\n\nAs usual, it should contains an introduction for your book. It will be automatically added to the final summary.\n\n#### SUMMARY.md\n\nThe `SUMMARY.md` defines your book's structure. It should contain a list of chapters, linking to their respective pages.\n\nExample:\n\n```\n# Summary\n\nThis is the summary of my book.\n\n* [section 1](section1/README.md)\n    * [example 1](section1/example1.md)\n    * [example 2](section1/example2.md)\n* [section 2](section2/README.md)\n    * [example 1](section2/example1.md)\n```\n\nFiles that are not included in the `SUMMARY.md` will not be processed by `gitbook`.\n\n#### Exercises\n\nA book can contain interactive exercises (currently only in Javascript but Python and Ruby are coming soon ;) ). An exercise is a code challenge provided to the reader, which is given a code editor to write a solution which is checked against the book author's validation code.\n\nAn exercise is defined by 4 simple parts:\n\n* Exercise **Message**/Goals (in markdown/text)\n* **Initial** code to show to the user, providing a starting point\n* **Solution** code, being a correct solution to the exercise\n* **Validation** code that tests the correctness of the user's input\n\nExercises need to start and finish with a separation bar (```---``` or ```***```). It should contain 3 code elements (**base**, **solution** and **validation**). It can contain a 4th element that provides **context** code (functions, imports of libraries etc ... that shouldn't be displayed to the user).\n\n    ---\n\n    Define a variable `x` equal to 10.\n\n    ```js\n    var x =\n    ```\n\n    ```js\n    var x = 10;\n    ```\n\n    ```js\n    assert(x == 10);\n    ```\n\n    ```js\n    // This is context code available everywhere\n    // The user will be able to call magicFunc in his code\n    function magicFunc() {\n        return 3;\n    }\n    ```\n\n    ---\n\n#### Multi-Languages\n\nGitBook supports building books written in multiple languages. Each language should be a sub-directory following the normal GitBook format, and a file named `LANGS.md` should be present at the root of the repository with the following format:\n\n```\n* [English](en/)\n* [French](fr/)\n* [Español](es/)\n```\n\nYou can see a complete example with the [Learn Git](https://github.com/GitbookIO/git) book.\n\n#### Ignoring files & folders\n\nGitBook will read the `.gitignore`, `.bookignore` and `.ignore` files to get a list of files and folders to skip. (The format inside those files, follows the same convention as `.gitignore`)\n\n#### Plugins\n\nPLugins can used to extend your book functionnalities. Read [GitbookIO/plugin](https://github.com/GitbookIO/plugin) for more informations about how to build a plugin for gitbook.\n\n##### Default plugins:\n\n* [mathjax](https://github.com/GitbookIO/plugin-mathjax): displays mathematical notation in the book.\n* [mixpanel](https://github.com/GitbookIO/plugin-mixpanel): Mixpanel tracking for your book\n\n##### Other plugins:\n\n* [Google Analytics](https://github.com/GitbookIO/plugin-ga): Google Analytics tracking for your book\n",
  "readmeFilename": "README.md",
  "_id": "gitbook@0.3.0",
  "_from": "gitbook@0.3.0"
}
